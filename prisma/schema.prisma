generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin {
  username String  @id @db.VarChar(30)
  password String? @db.VarChar(32)
  name     String  @db.VarChar(100)
  email    String? @db.VarChar(60)
  phone    String? @db.VarChar(12)
}

model book {
  book_id      String         @id @db.VarChar(15)
  book_name    String         @db.VarChar(250)
  description  String         @db.Text
  price        Int
  img          String         @db.VarChar(50)
  pub_id       String         @db.VarChar(5)
  cat_id       String         @db.VarChar(5)
  publisher    publisher      @relation(fields: [pub_id], references: [pub_id], onDelete: NoAction, map: "book_ibfk_1")
  category     category       @relation(fields: [cat_id], references: [cat_id], onDelete: NoAction, map: "book_ibfk_2")
  order_detail order_detail[]
  status      Boolean  @default(true)  


  @@index([cat_id], map: "maloai")
  @@index([pub_id, cat_id], map: "manxb")
}

model category {
  cat_id   String @id @db.VarChar(5)
  cat_name String @db.VarChar(50)
  book     book[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model news {
  id            Int     @id @default(autoincrement())
  title         String  @db.VarChar(200)
  img           String? @db.VarChar(50)
  short_content String  @db.VarChar(255)
  content       String  @db.Text
  hot           Int     @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model order {
  order_id        String         @id @db.VarChar(100)
  email           String         @default("") @db.VarChar(50)
  order_date      DateTime       @default(dbgenerated("'0000-00-00 00:00:00'")) @db.DateTime(0)
  consignee_name  String         @db.VarChar(50)
  consignee_add   String         @db.VarChar(80)
  consignee_phone String         @default("") @db.VarChar(12)
  status          Int            @default(0)
  users           users          @relation(fields: [email], references: [email], onDelete: Cascade, map: "order_ibfk_1")
  order_detail    order_detail[]

  @@index([email], map: "email")
}

model order_detail {
  order_id String @db.VarChar(100)
  book_id  String @db.VarChar(15)
  quantity Int    @default(0) @db.UnsignedTinyInt
  price    Float  @default(0) @db.Float
  order    order  @relation(fields: [order_id], references: [order_id], onDelete: Cascade, map: "order_detail_ibfk_1")
  book     book   @relation(fields: [book_id], references: [book_id], onDelete: Cascade, map: "order_detail_ibfk_2")

  @@id([order_id, book_id])
  @@index([book_id], map: "masach")
}

model publisher {
  pub_id   String @id @db.VarChar(5)
  pub_name String @db.VarChar(30)
  book     book[]
}

model users {
  role     users_role? @default(USER)
  email    String      @id @default("") @db.VarChar(50)
  password String      @db.VarChar(60)
  name     String      @db.VarChar(50)
  address  String      @db.VarChar(100)
  phone    String?     @db.VarChar(10)
  order    order[]
  avatar   String?

}

enum users_role {
  USER
  ADMIN
}
